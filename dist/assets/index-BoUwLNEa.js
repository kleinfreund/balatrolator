(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function r(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(i){if(i.ep)return;i.ep=!0;const o=r(i);fetch(i.href,o)}})();const J={hasFourFingers:!1,hasShortcut:!1,hasSmearedJoker:!1};function ce(e,t=J){const{hasFourFingers:r=J.hasFourFingers,hasShortcut:n=J.hasShortcut,hasSmearedJoker:i=J.hasSmearedJoker}=t,o=k(e,5),a=R(e,r,i);if(o.length>0&&a.length>0)return{playedHand:"Flush Five",scoringCards:_(e,o,a)};const s=ue(e);if(s.length>0&&a.length>0)return{playedHand:"Flush House",scoringCards:_(e,s,a)};if(o.length>0)return{playedHand:"Five of a Kind",scoringCards:o};const l=P(e,r,n);if(a.length>0&&l.length>0)return{playedHand:"Straight Flush",scoringCards:_(e,a,l)};const d=k(e,4);if(d.length>0)return{playedHand:"Four of a Kind",scoringCards:d};if(s.length>0)return{playedHand:"Full House",scoringCards:s};if(a.length>0)return{playedHand:"Flush",scoringCards:a};if(l.length>0)return{playedHand:"Straight",scoringCards:l};const c=k(e,3);if(c.length>0)return{playedHand:"Three of a Kind",scoringCards:c};const u=de(e);if(u.length>0)return{playedHand:"Two Pair",scoringCards:u};const h=k(e,2);return h.length>0?{playedHand:"Pair",scoringCards:h}:{playedHand:"High Card",scoringCards:pe(e)}}function ue(e){const t=new Map;for(const i of e){if(i.enhancement==="stone")continue;t.has(i.rank)||t.set(i.rank,[]),t.get(i.rank).push(i)}const r=[],n=[];for(const i of t.values())i.length===3?r.push(...i):i.length===2&&n.push(...i);return r.length>0&&n.length>0?e.filter(i=>r.includes(i)||n.includes(i)):[]}const me={Spades:"Clubs",Hearts:"Diamonds",Clubs:"Spades",Diamonds:"Hearts"};function R(e,t,r){const n=t?4:5,i=new Map;for(const o of e){if(o.enhancement==="stone")continue;const a=o.enhancement==="wild"?["Spades","Hearts","Clubs","Diamonds"]:r?[o.suit,me[o.suit]]:[o.suit];for(const s of a)i.has(s)||i.set(s,[]),i.get(s).push(o)}for(const o of i.values())if(o.length===n)return o;return[]}function P(e,t,r){const n=t?4:5,i=r?2:1,o=e.filter(({enhancement:c})=>c!=="stone").map(({rank:c})=>Q[c]);o.sort((c,u)=>c-u);const a=Array.from({length:i},(c,u)=>u+1);let s=o[0];const l=[s];let d=!1;for(let c=1;c<o.length;c++){const u=o[c];a.some(h=>s+h===u)&&l.push(u),s=u,l.length===n&&(d=!0)}return d?e.filter(({rank:c})=>l.includes(Q[c])):[]}function de(e){const t=new Map;for(const i of e){if(i.enhancement==="stone")continue;t.has(i.rank)||t.set(i.rank,[]),t.get(i.rank).push(i)}const r=[],n=[];for(const i of t.values())if(i.length===2)if(r.length>0){n.push(...i);break}else r.push(...i);return r.length>0&&n.length>0?r.concat(...n):[]}function k(e,t){const r=new Map;for(const i of e){if(i.enhancement==="stone")continue;r.has(i.rank)||r.set(i.rank,[]),r.get(i.rank).push(i)}const n=[];for(const i of r.values())i.length>=t&&n.push(...i);return n}function pe(e){let t,r=0;for(const n of e){const i=L[n.rank];i>r&&(r=i,t=n)}return[t]}function _(e,t,r){return e.filter(n=>!!(t.some(({rank:i,suit:o})=>i===n.rank&&o===n.suit)||r.some(({rank:i,suit:o})=>i===n.rank&&o===n.suit)))}function b({card:e},t){return e.enhancement==="stone"?!1:(Array.isArray(t)?t:[t]).includes(e.rank)}function B({state:e,card:t}){return e.jokerSet.has("Pareidolia")?!0:b({card:t},["King","Queen","Jack"])}function S({card:e},t){return e.enhancement==="stone"?!1:e.enhancement==="wild"?!0:(Array.isArray(t)?t:[t]).includes(e.suit)}const M={edition:{base:{},foil:{plusChips:50},holographic:{plusMultiplier:10},polychrome:{timesMultiplier:1.5},negative:{}},playedEnhancement:{none:{},bonus:{plusChips:30},mult:{plusMultiplier:4},wild:{},glass:{timesMultiplier:2},steel:{},stone:{plusChips:50},gold:{},lucky:{}},heldEnhancement:{none:{},bonus:{},mult:{},wild:{},glass:{},steel:{timesMultiplier:1.5},stone:{},gold:{},lucky:{}},seal:{none:{},gold:{},red:{timesMultiplier:2},blue:{},purple:{}}},he={"Flush Five":{chips:40,multiplier:3},"Flush House":{chips:40,multiplier:3},"Five of a Kind":{chips:35,multiplier:3},"Straight Flush":{chips:40,multiplier:3},"Four of a Kind":{chips:30,multiplier:3},"Full House":{chips:25,multiplier:2},Flush:{chips:15,multiplier:2},Straight:{chips:30,multiplier:2},"Three of a Kind":{chips:20,multiplier:2},"Two Pair":{chips:20,multiplier:1},Pair:{chips:15,multiplier:1},"High Card":{chips:10,multiplier:1}},X={"Flush Five":{chips:160,multiplier:16},"Flush House":{chips:140,multiplier:14},"Five of a Kind":{chips:120,multiplier:12},"Straight Flush":{chips:100,multiplier:8},"Four of a Kind":{chips:60,multiplier:7},"Full House":{chips:40,multiplier:4},Flush:{chips:35,multiplier:4},Straight:{chips:30,multiplier:4},"Three of a Kind":{chips:30,multiplier:3},"Two Pair":{chips:20,multiplier:2},Pair:{chips:10,multiplier:2},"High Card":{chips:5,multiplier:1}},L={Ace:11,King:10,Queen:10,Jack:10,10:10,9:9,8:8,7:7,6:6,5:5,4:4,3:3,2:2},U=Object.keys(L),z=["Clubs","Spades","Hearts","Diamonds"],Q={King:13,Queen:12,Jack:11,10:10,9:9,8:8,7:7,6:6,5:5,4:4,3:3,2:2,Ace:1},fe=["Seltzer","Sock and Buskin","Dusk","Hanging Chad","Hack"],ye=["Seltzer","Sock and Buskin","Mime"],D={Joker:{rarity:"common",effect({score:e}){e.multiplier+=4}},"Greedy Joker":{rarity:"common",playedCardEffect({score:e,card:t}){e.multiplier+=S({card:t},"Diamonds")?4:0}},"Lusty Joker":{rarity:"common",playedCardEffect({score:e,card:t}){e.multiplier+=S({card:t},"Hearts")?4:0}},"Wrathful Joker":{rarity:"common",playedCardEffect({score:e,card:t}){e.multiplier+=S({card:t},"Spades")?4:0}},"Gluttonous Joker":{rarity:"common",playedCardEffect({score:e,card:t}){e.multiplier+=S({card:t},"Clubs")?4:0}},"Jolly Joker":{rarity:"common",effect({score:e,state:t}){const r=k(t.playedCards,2);e.multiplier+=r.length>0?8:0}},"Zany Joker":{rarity:"common",effect({score:e,state:t}){const r=k(t.playedCards,3);e.multiplier+=r.length>0?8:0}},"Mad Joker":{rarity:"common",effect({score:e,state:t}){const r=k(t.playedCards,4);e.multiplier+=r.length>0?8:0}},"Crazy Joker":{rarity:"common",effect({score:e,state:t}){const r=t.jokerSet.has("Four Fingers"),n=t.jokerSet.has("Shortcut"),i=P(t.playedCards,r,n);e.multiplier+=i.length>0?12:0}},"Droll Joker":{rarity:"common",effect({score:e,state:t}){const r=t.jokerSet.has("Four Fingers"),n=t.jokerSet.has("Smeared Joker"),i=R(t.playedCards,r,n);e.multiplier+=i.length>0?10:0}},"Sly Joker":{rarity:"common",effect({score:e,state:t}){const r=k(t.playedCards,2);e.chips+=r.length>0?50:0}},"Wily Joker":{rarity:"common",effect({score:e,state:t}){const r=k(t.playedCards,3);e.chips+=r.length>0?100:0}},"Clever Joker":{rarity:"common",effect({score:e,state:t}){const r=k(t.playedCards,4);e.chips+=r.length>0?150:0}},"Devious Joker":{rarity:"common",effect({score:e,state:t}){const r=t.jokerSet.has("Four Fingers"),n=t.jokerSet.has("Shortcut"),i=P(t.playedCards,r,n);e.chips+=i.length>0?100:0}},"Crafty Joker":{rarity:"common",effect({score:e,state:t}){const r=t.jokerSet.has("Four Fingers"),n=t.jokerSet.has("Smeared Joker"),i=R(t.playedCards,r,n);e.chips+=i.length>0?80:0}},"Half Joker":{rarity:"common",effect({score:e,state:t}){e.multiplier+=t.playedCards.length<=3?20:0}},"Joker Stencil":{rarity:"uncommon",effect({score:e,state:t}){const r=t.jokers.filter(({edition:n})=>n!=="negative");e.multiplier*=t.jokerSlots-r.length}},"Four Fingers":{rarity:"uncommon"},Mime:{rarity:"uncommon"},"Credit Card":{rarity:"common"},"Ceremonial Dagger":{rarity:"uncommon",hasPlusMultiplierInput:!0,effect({score:e}){e.multiplier+=this.plusMultiplier}},Banner:{rarity:"common",effect({score:e,state:t}){e.chips+=t.discards*40}},"Mystic Summit":{rarity:"common",effect({score:e,state:t}){e.multiplier+=t.discards===0?15:0}},"Marble Joker":{rarity:"uncommon"},"Loyalty Card":{rarity:"uncommon",hasIsActiveInput:!0,effect({score:e}){e.multiplier*=this.isActive?4:0}},"8 Ball":{rarity:"common"},Misprint:{rarity:"common",effect({score:e}){e.multiplier+=0}},Dusk:{rarity:"uncommon"},"Raised Fist":{rarity:"common",effect({score:e,state:t}){const r=t.heldCards.map(({rank:i})=>L[i]);r.sort((i,o)=>i-o);const n=r[0];e.multiplier+=n?2*n:0}},"Chaos the Clown":{rarity:"common"},Fibonacci:{rarity:"uncommon",playedCardEffect({score:e,card:t}){e.multiplier+=b({card:t},["Ace","2","3","5","8"])?8:0}},"Steel Joker":{rarity:"uncommon",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},"Scary Face":{rarity:"common",playedCardEffect({score:e,state:t,card:r}){e.chips+=B({state:t,card:r})?30:0}},"Abstract Joker":{rarity:"common",effect({score:e,state:t}){e.multiplier+=t.jokers.length}},"Delayed Gratification":{rarity:"common"},Hack:{rarity:"uncommon"},Pareidolia:{rarity:"uncommon"},"Gros Michel":{rarity:"common",probability:{numerator:1,denominator:4},effect({score:e}){e.multiplier+=15}},"Even Steven":{rarity:"common",playedCardEffect({score:e,card:t}){e.multiplier+=b({card:t},["10","8","6","4","2"])?4:0}},"Odd Todd":{rarity:"common",playedCardEffect({score:e,card:t}){e.chips+=b({card:t},["Ace","9","7","5","3"])?30:0}},Scholar:{rarity:"common",playedCardEffect({score:e,card:t}){const r=b({card:t},"Ace");e.chips+=r?20:0,e.multiplier+=r?4:0}},"Business Card":{rarity:"common",probability:{numerator:1,denominator:2}},Supernova:{rarity:"common",effect({score:e,state:t}){e.multiplier+=t.handLevels[t.playedHand].plays+1}},"Ride the Bus":{rarity:"common",hasPlusMultiplierInput:!0,effect({score:e}){e.multiplier+=this.plusMultiplier}},"Space Joker":{rarity:"uncommon",probability:{numerator:1,denominator:4}},Egg:{rarity:"common"},Burglar:{rarity:"uncommon"},Blackboard:{rarity:"uncommon",effect({score:e,state:t}){const r=t.heldCards.every(n=>S({card:n},["Spades","Clubs"]));e.multiplier*=r?3:1}},Runner:{rarity:"common",hasPlusChipsInput:!0,effect({score:e}){e.chips+=this.plusChips}},"Ice Cream":{rarity:"common",hasPlusChipsInput:!0,effect({score:e}){e.chips+=this.plusChips}},DNA:{rarity:"rare"},Splash:{rarity:"common"},"Blue Joker":{rarity:"common",hasPlusChipsInput:!0,effect({score:e}){e.chips+=this.plusChips}},"Sixth Sense":{rarity:"rare"},Constellation:{rarity:"uncommon",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},Hiker:{rarity:"common",hasPlusChipsInput:!0,effect({score:e}){e.chips+=this.plusChips}},"Faceless Joker":{rarity:"common"},"Green Joker":{rarity:"common",hasPlusMultiplierInput:!0,effect({score:e}){e.multiplier+=this.plusMultiplier}},Superposition:{rarity:"common"},"To Do List":{rarity:"common"},Cavendish:{rarity:"common",probability:{numerator:1,denominator:1e3},effect({score:e}){e.multiplier*=3}},"Card Sharp":{rarity:"uncommon",effect({score:e}){e.multiplier*=this.isActive?3:1}},"Red Card":{rarity:"common",hasPlusMultiplierInput:!0,effect({score:e}){e.multiplier+=this.plusMultiplier}},Madness:{rarity:"uncommon",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},"Square Joker":{rarity:"common",hasPlusChipsInput:!0,effect({score:e}){e.chips+=this.plusChips}},Séance:{rarity:"rare"},"Riff-Raff":{rarity:"common"},Vampire:{rarity:"uncommon",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},Shortcut:{rarity:"common"},Hologram:{rarity:"uncommon",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},Vagabond:{rarity:"uncommon"},Baron:{rarity:"rare",heldCardEffect({score:e,card:t}){e.multiplier*=t.rank==="King"?1.5:1}},"Cloud 9":{rarity:"uncommon"},Rocket:{rarity:"uncommon"},Obelisk:{rarity:"rare",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},"Midas Mask":{rarity:"uncommon"},Luchador:{rarity:"uncommon"},Photograph:{rarity:"common",playedCardEffect({score:e,state:t,card:r}){const n=t.playedCards.find(o=>["King","Queen","Jack"].includes(o.rank)),i=r.index===(n==null?void 0:n.index);e.multiplier*=i?2:1}},"Gift Card":{rarity:"uncommon"},"Turtle Bean":{rarity:"uncommon"},Erosion:{rarity:"uncommon",hasPlusMultiplierInput:!0,effect({score:e}){e.multiplier+=this.plusMultiplier}},"Reserved Parking":{rarity:"uncommon",probability:{numerator:1,denominator:2}},"Mail-in Rebate":{rarity:"common"},"To the Moon":{rarity:"uncommon"},Hallucination:{rarity:"common",probability:{numerator:1,denominator:2}},"Fortune Teller":{rarity:"common",hasPlusMultiplierInput:!0,effect({score:e}){e.multiplier+=this.plusMultiplier}},Juggler:{rarity:"common"},Drunkard:{rarity:"common"},"Stone Joker":{rarity:"uncommon",hasPlusChipsInput:!0,effect({score:e}){e.chips+=this.plusChips}},"Golden Joker":{rarity:"common"},"Lucky Cat":{rarity:"uncommon",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},"Baseball Card":{rarity:"rare",indirectEffect({score:e,joker:t}){e.multiplier*=t.rarity==="uncommon"?1.5:1}},Bull:{rarity:"uncommon",effect({score:e,state:t}){e.chips+=t.money*2}},"Diet Cola":{rarity:"uncommon"},"Trading Card":{rarity:"uncommon"},"Flash Card":{rarity:"uncommon",hasPlusMultiplierInput:!0,effect({score:e}){e.multiplier+=this.plusMultiplier}},Popcorn:{rarity:"common",hasPlusMultiplierInput:!0,effect({score:e}){e.multiplier+=this.plusMultiplier}},"Spare Trousers":{rarity:"uncommon",hasPlusMultiplierInput:!0,effect({score:e}){e.multiplier+=this.plusMultiplier}},"Ancient Joker":{rarity:"rare",hasSuitInput:!0,effect({score:e,state:t}){const r=t.playedCards.filter(n=>S({card:n},this.suit));e.multiplier*=r.length*1.5}},Ramen:{rarity:"uncommon",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},"Walkie Talkie":{rarity:"common",playedCardEffect({score:e,card:t}){const r=b({card:t},["4","10"]);e.chips+=r?10:0,e.multiplier+=r?4:0}},Seltzer:{rarity:"uncommon"},Castle:{rarity:"uncommon",hasPlusChipsInput:!0,effect({score:e}){e.chips+=this.plusChips}},"Smiley Face":{rarity:"common",playedCardEffect({score:e,state:t,card:r}){e.multiplier+=B({state:t,card:r})?4:0}},Campfire:{rarity:"rare",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},"Golden Ticket":{rarity:"common"},"Mr. Bones":{rarity:"uncommon"},Acrobat:{rarity:"uncommon",effect({score:e,state:t}){e.multiplier*=t.hands===1?3:1}},"Sock and Buskin":{rarity:"uncommon"},Swashbuckler:{rarity:"common",hasPlusMultiplierInput:!0,effect({score:e}){e.multiplier+=this.plusMultiplier}},Troubador:{rarity:"uncommon"},Certificate:{rarity:"uncommon"},"Smeared Joker":{rarity:"uncommon"},Throwback:{rarity:"uncommon",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},"Hanging Chad":{rarity:"common"},"Rough Gem":{rarity:"uncommon"},Bloodstone:{rarity:"uncommon",probability:{numerator:1,denominator:3},playedCardEffect({score:e,card:t}){e.multiplier*=(S({card:t},"Hearts"),1)}},Arrowhead:{rarity:"uncommon",playedCardEffect({score:e,card:t}){e.chips+=S({card:t},"Spades")?50:0}},"Onyx Agate":{rarity:"uncommon",playedCardEffect({score:e,card:t}){e.multiplier+=S({card:t},"Clubs")?8:0}},"Glass Joker":{rarity:"uncommon",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},Showman:{rarity:"uncommon"},Flowerpot:{rarity:"uncommon",effect({score:e,state:t}){const r=["Spades","Hearts","Clubs","Diamonds"].every(n=>{t.scoringCards.some(i=>S({card:i},n))});e.multiplier*=r?3:1}},Blueprint:{rarity:"rare"},"Wee Joker":{rarity:"rare",hasPlusChipsInput:!0,effect({score:e}){e.chips+=this.plusChips}},"Merry Andy":{rarity:"uncommon"},"Oops! All 6s":{rarity:"uncommon"},"The Idol":{rarity:"uncommon",hasRankInput:!0,hasSuitInput:!0,playedCardEffect({score:e,card:t}){e.multiplier*=this.suit&&S({card:t},this.suit)&&t.rank===this.rank?2:1}},"Seeing Double":{rarity:"uncommon",effect({score:e,state:t}){const r=t.scoringCards.some(i=>S({card:i},"Clubs")),n=t.scoringCards.some(i=>S({card:i},["Spades","Hearts","Diamonds"]));e.multiplier*=r&&n?2:1}},Matador:{rarity:"common"},"Hit the Road":{rarity:"rare",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},"The Duo":{rarity:"rare",effect({score:e,state:t}){const r=k(t.playedCards,2);e.multiplier*=r.length>0?2:1}},"The Trio":{rarity:"rare",effect({score:e,state:t}){const r=k(t.playedCards,3);e.multiplier*=r.length>0?3:1}},"The Family":{rarity:"rare",effect({score:e,state:t}){const r=k(t.playedCards,4);e.multiplier*=r.length>0?4:1}},"The Order":{rarity:"common",effect({score:e,state:t}){const r=t.jokerSet.has("Four Fingers"),n=t.jokerSet.has("Shortcut"),i=P(t.playedCards,r,n);e.multiplier*=i.length>0?3:1}},"The Tribe":{rarity:"rare",effect({score:e,state:t}){const r=t.jokerSet.has("Four Fingers"),n=t.jokerSet.has("Smeared Joker"),i=R(t.playedCards,r,n);e.multiplier*=i.length>0?2:1}},Stuntman:{rarity:"uncommon",effect({score:e}){e.chips+=300}},"Invisible Joker":{rarity:"rare"},Brainstorm:{rarity:"rare"},Satellite:{rarity:"uncommon"},"Shoot the Moon":{rarity:"common",playedCardEffect({score:e,card:t}){e.multiplier+=t.rank==="Queen"?13:0}},"Driver's license":{rarity:"rare",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},Cartomancer:{rarity:"common"},Astronomer:{rarity:"uncommon"},"Burnt Joker":{rarity:"uncommon"},Bootstraps:{rarity:"common",effect({score:e,state:t}){const r=Math.max(0,Math.floor(t.money/5));e.multiplier+=r*2}},Canio:{rarity:"legendary",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},Triboulet:{rarity:"legendary",playedCardEffect({score:e,card:t}){e.multiplier*=b({card:t},["King","Queen"])?2:0}},Yorick:{rarity:"legendary",hasTimesMultiplierInput:!0,effect({score:e}){e.multiplier*=this.timesMultiplier}},Chicot:{rarity:"legendary"},Perkeo:{rarity:"legendary"}},V=Object.keys(D);function ge(e){if(e<1e12)return new Intl.NumberFormat("en",{maximumFractionDigits:0}).format(e);{const t=new Intl.NumberFormat("en",{notation:"scientific",maximumSignificantDigits:4}).format(e).toLowerCase(),[r,n]=t.split("e");return r.padEnd(5,"0")+"e"+n}}var Se={BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0,SSR:!1};const x=Se.VITE_DEBUG==="true";function H(...e){m(...e),x&&console.group()}function F(...e){x&&console.groupEnd(),m(...e)}function m(...e){if(x){const t=e.map(r=>r&&typeof r=="object"&&"chips"in r&&"multiplier"in r&&Object.keys(r).length===2?`${r.chips} × ${r.multiplier}`:r);console.log(...t)}}function T(e){return e!=null}function $(e,t,r=new Set){if(!t)return;let n;return t.name==="Blueprint"?n=e.jokers[t.index+1]:t.name==="Brainstorm"&&(n=e.jokers[0]),n?r.has(n.index)?void 0:(r.add(n.index),$(e,n,r)):t}function ke(e){const t=je(e),{chips:r,multiplier:n}=Ce(t);m(`
Received:`,{chips:r,multiplier:n}),m("Expected:",{chips:340,multiplier:1685e13});let i;t.deck==="Plasma Deck"?(m("Balanced:",{chips:247e14,multiplier:247e14}),i=Math.pow((r+n)/2,2)):i=r*n;const o=i>1e4?Math.floor(i):i;return{hand:t.playedHand,scoringCards:t.scoringCards,score:o,formattedScore:ge(o)}}function Ce(e){const{chips:t,multiplier:r}=e.handBaseScores[e.playedHand];m(`
0. Determining base score …`);const n=e.blind==="The Flint"?.5:1,i={chips:Math.round(t*n),multiplier:Math.round(r*n)};m(`
0. BASE SCORE =>`,i),m(`
1. Scoring played cards …`);for(const o of e.scoringCards){if(H(`
→ ${o}`,i),o.isDebuffed){F("!!! Debuffed !!!");continue}const a=Ee({state:e,card:o});for(const[s,l]of a.entries())m(`Trigger: ${s+1} (${l})`),ve({state:e,score:i,card:o});F(`← ${o}`,i)}m(`
1. PLAYED CARD SCORE =>`,i),m(`
2. Scoring held cards …`);for(const o of e.heldCards){if(H(`
→ ${o}`,i),o.isDebuffed){F("!!! Debuffed !!!");continue}const a=Me({state:e,card:o});for(const[s,l]of a.entries())m(`Trigger: ${s+1} (${l})`),be({state:e,score:i,card:o});F(`← ${o}`,i)}m(`
2. HELD CARD SCORE =>`,i),m(`
3. Scoring jokers …`);for(const o of e.jokers)H(`
→ ${o}`,i),Ie({state:e,score:i,joker:o}),F(`← ${o}`,i);return m(`
3. JOKER SCORE =>`,i),i}function Ee({state:e,card:t}){const r=["Regular"],n=e.jokers.map(i=>$(e,i)).filter(T).map(({name:i})=>i).filter(i=>fe.includes(i));for(const i of n)switch(i){case"Dusk":{e.hands===1&&r.push(i);break}case"Hack":{b({card:t},["2","3","4","5"])&&r.push(i);break}case"Hanging Chad":{t.index===0&&r.push(i);break}case"Seltzer":{r.push(i);break}case"Sock and Buskin":{B({state:e,card:t})&&r.push(i);break}}return t.seal==="red"&&r.push("Red Seal"),r}function Me({state:e,card:t}){const r=["Regular"],n=e.jokers.map(i=>$(e,i)).filter(T).map(({name:i})=>i).filter(i=>ye.includes(i));for(const i of n)switch(i){case"Mime":{r.push(i);break}case"Seltzer":{r.push(i);break}case"Sock and Buskin":{B({state:e,card:t})&&r.push(i);break}}return t.seal==="red"&&r.push("Red Seal"),r}function ve({state:e,score:t,card:r}){r.enhancement!=="stone"&&(t.chips+=L[r.rank],m(t,"(+Chips from rank)"));const{plusChips:n}=M.playedEnhancement[r.enhancement];n&&(t.chips+=n,m(t,"(+Chips from enhancement)"));const{plusChips:i}=M.edition[r.edition];i&&(t.chips+=i,m(t,"(+Chips from edition)"));const{plusMultiplier:o}=M.playedEnhancement[r.enhancement];o&&(t.multiplier+=o,m(t,"(+Mult from enhancement)"));const{plusMultiplier:a}=M.edition[r.edition];a&&(t.multiplier+=a,m(t,"(+Mult from edition)"));const{timesMultiplier:s}=M.playedEnhancement[r.enhancement];s&&(t.multiplier*=s,m(t,"(xMult from enhancement)"));const{timesMultiplier:l}=M.edition[r.edition];l&&(t.multiplier*=l,m(t,"(xMult from edition)"));for(const d of e.jokers)d.playedCardEffect({state:e,score:t,card:r})}function be({state:e,score:t,card:r}){const{timesMultiplier:n}=M.heldEnhancement[r.enhancement];n&&(t.multiplier*=n,m(t,"(xMult from enhancement)"));for(const i of e.jokers)i.heldCardEffect({state:e,score:t,card:r}),m(t,`(${i})`)}function Ie({state:e,score:t,joker:r}){r.effect({state:e,score:t});const{plusChips:n}=M.edition[r.edition];n&&(t.chips+=n,m(t,"(+Chips from edition)"));const{plusMultiplier:i}=M.edition[r.edition];i&&(t.multiplier+=i,m(t,"(+Mult from edition)"));const{timesMultiplier:o}=M.edition[r.edition];o&&(t.multiplier*=o,m(t,"(xMult from edition)"))}function je(e){const{hands:t=0,discards:r=0,money:n=0,blind:i="Small Blind",deck:o="Red Deck",handLevels:a={},jokers:s=[],jokerSlots:l=5,playedCards:d=[],heldCards:c=[]}=e,u=Fe(a),h=Te(u),p=Ae(s),f=new Set(p.map(({name:w})=>w)),y=Y(d),g=Y(c),C=f.has("Four Fingers"),I=f.has("Shortcut"),{playedHand:j,scoringCards:A}=ce(y,{hasFourFingers:C,hasShortcut:I}),E=f.has("Splash")?y:A;return{hands:t,discards:r,money:n,blind:i,deck:o,handLevels:u,handBaseScores:h,jokers:p,jokerSet:f,jokerSlots:l,playedCards:y,heldCards:g,playedHand:j,scoringCards:E}}function Fe(e){const r=Object.keys(X).map(n=>[n,e[n]??{level:1,plays:0}]);return Object.fromEntries(r)}function Te(e){const r=Object.entries(e).map(([n,{level:i}])=>{const o=X[n],a=he[n],s=i===0?0:o.chips+(i-1)*a.chips,l=i===0?0:o.multiplier+(i-1)*a.multiplier;return[n,{chips:s,multiplier:l}]});return Object.fromEntries(r)}function Ae(e){return e.map((t,r)=>{const{edition:n="base",plusChips:i=0,plusMultiplier:o=0,timesMultiplier:a=1,isActive:s=!1}=t,l=[t.edition].filter(C=>C!==void 0),d=()=>`${t.name}`+(l.length>0?` (${l.join(", ")})`:""),c=D[t.name],u=De(c.effect),h=c.indirectEffect,p=W(c.playedCardEffect),f=W(c.heldCardEffect),{rarity:y,probability:g={numerator:1,denominator:1}}=c;return{...t,rarity:y,probability:g,effect:u,indirectEffect:h,playedCardEffect:p,heldCardEffect:f,toString:d,index:r,edition:n,plusChips:i,plusMultiplier:o,timesMultiplier:a,isActive:s}})}function De(e){return function(t){const r=["Regular"],n=t.state.jokers.filter(({name:o})=>["Blueprint","Brainstorm"].includes(o)).map(o=>$(t.state,o)).filter(T);for(const{name:o}of n)o===this.name&&r.push(o);const i=t.state.jokers.filter(o=>o.indirectEffect);for(const[o,a]of r.entries()){m(`Trigger: ${o+1} (${a})`),e&&(e.call(this,t),m(t.score,`(${this.name})`));for(const s of n)s.indirectEffect&&(s.indirectEffect({...t,joker:this}),m(t.score,a));for(const s of i)s.indirectEffect&&(s.indirectEffect({...t,joker:this}),m(t.score,`(${s.name})`))}}}function W(e){return function(t){if(!e)return;H(`→ ${this}`);const r=["Regular"],n=t.state.jokers.filter(({name:o})=>o==="Blueprint").map(({index:o})=>t.state.jokers[o+1]).filter(T);for(const{name:o}of n)o===this.name&&r.push(`Blueprint copying ${this.name}`);const i=t.state.jokers.filter(({name:o})=>o==="Brainstorm").map(()=>t.state.jokers[0]).filter(T);for(const{name:o}of i)o===this.name&&r.push(`Brainstorm copying ${this.name}`);for(let o=0;o<r.length;o++)m(`Trigger: ${o+1} (${r[o]})`),e.call(this,t),m(t.score,`(${this.name})`);F("←",t.score)}}function Y(e){return e.map((t,r)=>{const{edition:n="base",enhancement:i="none",seal:o="none",isDebuffed:a=!1}=t,s=[t.edition,t.enhancement,t.seal].filter(d=>d!==void 0);return{...t,toString:()=>`${t.rank} of ${t.suit}`+(s.length>0?` (${s.join(", ")})`:""),index:r,edition:n,enhancement:i,seal:o,isDebuffed:a}})}function q(e,t){return e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e+1))+e}const Z={set(...e){window.localStorage.setItem(...e)},get(...e){return window.localStorage.getItem(...e)},remove(...e){window.localStorage.removeItem(...e)}};var Je={BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0,SSR:!1};const v=document.querySelector("[data-form]"),ee=v.querySelector("[data-r-hands]"),te=v.querySelector("[data-r-discards]"),re=v.querySelector("[data-r-money]"),ie=v.querySelector("[data-r-blind]"),ne=v.querySelector("[data-r-deck]"),oe=v.querySelector("[data-r-joker-slots]"),se=v.querySelector("[data-h-container]"),N=v.querySelector("[data-j-container]"),Re=document.querySelector("[data-j-add-button]"),Pe=document.querySelector("template#joker"),K=v.querySelector("[data-c-container]"),He=document.querySelector("[data-c-add-button]"),qe=document.querySelector("template#card");v.addEventListener("submit",Ke);Re.addEventListener("click",()=>G());He.addEventListener("click",()=>O());Be();function Be(){if(Je.VITE_DEBUG==="true"){let e=3;for(;e--;)Oe();let t=5;for(;t--;)Le()}else Z.get("initialState")&&Ge({blind:"Big Blind",playedCards:[{rank:"Ace",suit:"Diamonds",seal:"red"},{rank:"Ace",suit:"Diamonds",enhancement:"glass",seal:"red"},{rank:"Ace",suit:"Diamonds",enhancement:"glass",seal:"red"},{rank:"Ace",suit:"Diamonds",enhancement:"glass",seal:"red"},{rank:"Ace",suit:"Diamonds",enhancement:"glass",seal:"red"}],heldCards:[{rank:"Ace",suit:"Diamonds",enhancement:"mult"},{rank:"Ace",suit:"Diamonds",enhancement:"steel",seal:"red"},{rank:"Ace",suit:"Diamonds",enhancement:"steel",seal:"red"},{rank:"Ace",suit:"Diamonds",seal:"red"}],jokers:[{name:"DNA"},{name:"Blueprint"},{name:"The Idol",rank:"Ace",suit:"Diamonds"},{name:"Hologram",timesMultiplier:12.25},{name:"The Family"},{name:"Glass Joker",timesMultiplier:5.5}],handLevels:{"Flush Five":{level:11,plays:0}}})}function Oe(){const e=V[q(0,V.length-1)];G({name:e})}function Le(){const e=U[q(0,U.length-1)],t=z[q(0,z.length-1)],r=q(0,1)===1;O({rank:e,suit:t},r)}function G(e){const t=Pe.content.cloneNode(!0),r=t.querySelector("[data-joker]"),n=N.children.length,i=r.querySelector(".j-name-input"),o=r.querySelector(".j-edition-input"),a=r.querySelector(".j-plus-chips-input"),s=r.querySelector(".j-plus-multiplier-input"),l=r.querySelector(".j-times-multiplier-input"),d=r.querySelector(".j-is-active-input"),c=r.querySelector(".j-rank-input"),u=r.querySelector(".j-suit-input");if(i.name=`joker-name-${n}`,o.name=`joker-edition-${n}`,a.name=`joker-plusChips-${n}`,s.name=`joker-plusMultiplier-${n}`,l.name=`joker-timesMultiplier-${n}`,d.name=`joker-isActive-${n}`,c.name=`joker-rank-${n}`,u.name=`joker-suit-${n}`,r.addEventListener("click",$e),i.addEventListener("change",_e),r.querySelector("[data-j-remove-button]").addEventListener("click",we),e){const{name:p,edition:f,plusChips:y,plusMultiplier:g,timesMultiplier:C,isActive:I,rank:j,suit:A}=e,E=D[p];i.value=p,o.value=f??"base",E.hasPlusChipsInput&&(a.value=String(y)),E.hasPlusMultiplierInput&&(s.value=String(g)),E.hasTimesMultiplierInput&&(l.value=String(C)),E.hasIsActiveInput&&(d.checked=!!I),E.hasRankInput&&(c.value=String(j)),E.hasSuitInput&&(u.value=String(A))}if(N.appendChild(t),e){const p=D[e.name];ae(r,p)}}function $e(){}function we(e){e.currentTarget instanceof HTMLElement&&e.currentTarget.closest("[data-joker]").remove()}function _e(e){const t=e.currentTarget,r=t.value,n=D[r],i=t.closest(".joker");ae(i,n)}function ae(e,t){console.log(e),e.classList.remove("--has-plus-chips","--has-plus-multiplier","--has-times-multiplier","--has-is-active","--has-rank","--has-suit"),[t.hasPlusChipsInput?"--has-plus-chips":null,t.hasPlusMultiplierInput?"--has-plus-multiplier":null,t.hasTimesMultiplierInput?"--has-times-multiplier":null,t.hasIsActiveInput?"--has-is-active":null,t.hasRankInput?"--has-rank":null,t.hasSuitInput?"--has-suit":null].filter(T).forEach(r=>e.classList.add(r))}function O(e,t){const r=qe.content.cloneNode(!0),n=r.querySelector("[data-card]"),i=K.children.length,o=n.querySelector(".c-is-played-input"),a=n.querySelector(".c-rank-input"),s=n.querySelector(".c-suit-input"),l=n.querySelector(".c-edition-input"),d=n.querySelector(".c-enhancement-input"),c=n.querySelector(".c-seal-input");if(o.name=`card-isPlayed-${i}`,a.name=`card-rank-${i}`,s.name=`card-suit-${i}`,l.name=`card-edition-${i}`,d.name=`card-enhancement-${i}`,c.name=`card-seal-${i}`,n.querySelector("[data-c-remove-button]").addEventListener("click",Ne),e){const{rank:h,suit:p,edition:f,enhancement:y,seal:g}=e;o.checked=!!t,a.value=h,s.value=p,l.value=f??"base",d.value=y??"none",c.value=g??"none"}K.appendChild(r)}function Ne(e){e.currentTarget instanceof HTMLElement&&e.currentTarget.closest("[data-card]").remove()}function Ke(e){e.preventDefault();const t=xe();Z.set("initialState",JSON.stringify(t));const r=ke(t);m(r),document.querySelector("textarea").textContent=JSON.stringify(r,null,2)}function xe(){const e=Number(ee.value),t=Number(te.value),r=Number(re.value),n=ie.value,i=ne.value,o=Number(oe.value),a={hands:e,discards:t,money:r,blind:n,deck:i,handLevels:{},jokers:[],jokerSlots:o,playedCards:[],heldCards:[]};for(const s of se.children){const l=s.querySelector("[data-h-name]"),d=s.querySelector("[data-h-level]"),c=s.querySelector("[data-h-plays]"),u=l.textContent,h=Number(d.value),p=Number(c.value);a.handLevels[u]={level:h,plays:p}}for(const s of N.children){const l=s.querySelector("[data-j-name]"),d=s.querySelector("[data-j-edition]"),c=s.querySelector("[data-j-plus-chips]"),u=s.querySelector("[data-j-plus-multiplier]"),h=s.querySelector("[data-j-times-multiplier]"),p=s.querySelector("[data-j-rank]"),f=s.querySelector("[data-j-suit]"),y=s.querySelector("[data-j-is-active]"),g=l.value,C=d.value,I=Number(c.value),j=Number(u.value),A=Number(h.value),E=p.value,w=f.value,le=y.checked;a.jokers.push({name:g,edition:C,plusChips:I,plusMultiplier:j,timesMultiplier:A,rank:E,suit:w,isActive:le})}for(const s of K.children){const l=s.querySelector("[data-c-rank]"),d=s.querySelector("[data-c-suit]"),c=s.querySelector("[data-c-edition]"),u=s.querySelector("[data-c-enhancement]"),h=s.querySelector("[data-c-seal]"),p=s.querySelector("[data-c-is-played]"),f=l.value,y=d.value,g=c.value,C=u.value,I=h.value,j=p.checked;a[j?"playedCards":"heldCards"].push({rank:f,suit:y,edition:g,enhancement:C,seal:I})}return a}function Ge(e){const{hands:t=0,discards:r=0,money:n=0,blind:i="Small Blind",deck:o="Red Deck",handLevels:a={},jokers:s=[],jokerSlots:l=5,playedCards:d=[],heldCards:c=[]}=e;ee.value=String(t),te.value=String(r),re.value=String(n),ie.value=i,ne.value=o,oe.value=String(l);for(const u of se.children){const h=u.querySelector("[data-h-name]"),p=u.querySelector("[data-h-level]"),f=u.querySelector("[data-h-plays]"),y=h.textContent,{level:g,plays:C}=a[y]??{level:1,plays:0};p.value=String(g),f.value=String(C)}for(const u of s)G(u);for(const u of d)O(u,!0);for(const u of c)O(u,!1)}
