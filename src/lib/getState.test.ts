import { describe, expect, test } from 'vitest'
import { getState } from './getState.ts'
import { InitialState, State } from './types.ts'

describe('getState', () => {
	test.each<{ initialState: InitialState, expected: State }>([
		{
			initialState: {},
			expected: {
				hands: 0,
				discards: 0,
				money: 0,
				blind: {
					name: 'Small Blind',
					active: true,
				},
				deck: 'Red Deck',
				observatory: {
					'Flush Five': 0,
					'Flush House': 0,
					'Five of a Kind': 0,
					'Straight Flush': 0,
					'Four of a Kind': 0,
					'Full House': 0,
					'Flush': 0,
					'Straight': 0,
					'Three of a Kind': 0,
					'Two Pair': 0,
					'Pair': 0,
					'High Card': 0,
				},
				handLevels: {
					'Flush Five': { 'level': 1, 'plays': 0 },
					'Flush House': { 'level': 1, 'plays': 0 },
					'Five of a Kind': { 'level': 1, 'plays': 0 },
					'Straight Flush': { 'level': 1, 'plays': 0 },
					'Four of a Kind': { 'level': 1, 'plays': 0 },
					'Full House': { 'level': 1, 'plays': 0 },
					'Flush': { 'level': 1, 'plays': 0 },
					'Straight': { 'level': 1, 'plays': 0 },
					'Three of a Kind': { 'level': 1, 'plays': 0 },
					'Two Pair': { 'level': 1, 'plays': 0 },
					'Pair': { 'level': 1, 'plays': 0 },
					'High Card': { 'level': 1, 'plays': 0 },
				},
				handBaseScores: {
					'Flush Five': { 'chips': 160, 'multiplier': 16 },
					'Flush House': { 'chips': 140, 'multiplier': 14 },
					'Five of a Kind': { 'chips': 120, 'multiplier': 12 },
					'Straight Flush': { 'chips': 100, 'multiplier': 8 },
					'Four of a Kind': { 'chips': 60, 'multiplier': 7 },
					'Full House': { 'chips': 40, 'multiplier': 4 },
					'Flush': { 'chips': 35, 'multiplier': 4 },
					'Straight': { 'chips': 30, 'multiplier': 4 },
					'Three of a Kind': { 'chips': 30, 'multiplier': 3 },
					'Two Pair': { 'chips': 20, 'multiplier': 2 },
					'Pair': { 'chips': 10, 'multiplier': 2 },
					'High Card': { 'chips': 5, 'multiplier': 1 },
				},
				jokers: [],
				jokerSet: new Set(),
				jokerSlots: 5,
				cards: [],
			},
		},
		{
			initialState: {
				blind: {
					name: 'Small Blind',
					active: true,
				},
				cards: [
					{ rank: '2', suit: 'Diamonds' },
					{ played: true, rank: 'King', suit: 'Hearts', edition: 'polychrome', enhancement: 'glass', seal: 'red' },
					{ played: true, rank: 'King', suit: 'Hearts', edition: 'polychrome', enhancement: 'glass', seal: 'red' },
					{ played: true, rank: 'King', suit: 'Hearts', edition: 'polychrome', enhancement: 'glass', seal: 'red' },
					{ played: true, rank: 'King', suit: 'Hearts', edition: 'polychrome', enhancement: 'glass', seal: 'red' },
					{ played: true, rank: 'King', suit: 'Hearts', edition: 'polychrome', enhancement: 'glass', seal: 'red' },
				],
				jokers: [
					{ name: 'Sock and Buskin' },
					{ name: 'Mail-in Rebate', edition: 'negative' },
					{ name: 'The Idol', edition: 'negative', rank: 'King', suit: 'Hearts' },
					{ name: 'Blueprint', edition: 'foil' },
					{ name: 'The Idol', edition: 'polychrome', rank: 'King', suit: 'Hearts' },
					{ name: 'Brainstorm', edition: 'foil' },
					{ name: 'Brainstorm' },
					{ name: 'Brainstorm', edition: 'foil' },
					{ name: 'Hanging Chad', edition: 'negative' },
					{ name: 'Chicot' },
				],
				handLevels: {
					'Flush Five': {
						level: 62,
						plays: 0,
					},
				},
			},
			expected: {
				hands: 0,
				discards: 0,
				money: 0,
				blind: {
					name: 'Small Blind',
					active: false,
				},
				deck: 'Red Deck',
				observatory: {
					'Flush Five': 0,
					'Flush House': 0,
					'Five of a Kind': 0,
					'Straight Flush': 0,
					'Four of a Kind': 0,
					'Full House': 0,
					'Flush': 0,
					'Straight': 0,
					'Three of a Kind': 0,
					'Two Pair': 0,
					'Pair': 0,
					'High Card': 0,
				},
				handLevels: {
					'Flush Five': { 'level': 62, 'plays': 0 },
					'Flush House': { 'level': 1, 'plays': 0 },
					'Five of a Kind': { 'level': 1, 'plays': 0 },
					'Straight Flush': { 'level': 1, 'plays': 0 },
					'Four of a Kind': { 'level': 1, 'plays': 0 },
					'Full House': { 'level': 1, 'plays': 0 },
					'Flush': { 'level': 1, 'plays': 0 },
					'Straight': { 'level': 1, 'plays': 0 },
					'Three of a Kind': { 'level': 1, 'plays': 0 },
					'Two Pair': { 'level': 1, 'plays': 0 },
					'Pair': { 'level': 1, 'plays': 0 },
					'High Card': { 'level': 1, 'plays': 0 },
				},
				handBaseScores: {
					'Flush Five': { 'chips': 3210, 'multiplier': 199 },
					'Flush House': { 'chips': 140, 'multiplier': 14 },
					'Five of a Kind': { 'chips': 120, 'multiplier': 12 },
					'Straight Flush': { 'chips': 100, 'multiplier': 8 },
					'Four of a Kind': { 'chips': 60, 'multiplier': 7 },
					'Full House': { 'chips': 40, 'multiplier': 4 },
					'Flush': { 'chips': 35, 'multiplier': 4 },
					'Straight': { 'chips': 30, 'multiplier': 4 },
					'Three of a Kind': { 'chips': 30, 'multiplier': 3 },
					'Two Pair': { 'chips': 20, 'multiplier': 2 },
					'Pair': { 'chips': 10, 'multiplier': 2 },
					'High Card': { 'chips': 5, 'multiplier': 1 },
				},
				jokers: [
					{
						index: 0,
						name: 'Sock and Buskin',
						edition: 'base',
						plusChips: 0,
						plusMultiplier: 0,
						timesMultiplier: 1,
						rank: undefined,
						suit: undefined,
						active: false,
						count: 1,
						rarity: 'uncommon',
						effect: undefined,
						heldCardEffect: undefined,
						indirectEffect: undefined,
						playedCardEffect: undefined,
						toString: () => '',
					},
					{
						index: 1,
						name: 'Mail-in Rebate',
						edition: 'negative',
						plusChips: 0,
						plusMultiplier: 0,
						timesMultiplier: 1,
						rank: undefined,
						suit: undefined,
						active: false,
						count: 1,
						rarity: 'common',
						effect: undefined,
						heldCardEffect: undefined,
						indirectEffect: undefined,
						playedCardEffect: undefined,
						toString: () => '',
					},
					{
						index: 2,
						name: 'The Idol',
						edition: 'negative',
						plusChips: 0,
						plusMultiplier: 0,
						timesMultiplier: 1,
						rank: 'King',
						suit: 'Hearts',
						active: false,
						count: 1,
						rarity: 'uncommon',
						effect: undefined,
						heldCardEffect: undefined,
						indirectEffect: undefined,
						playedCardEffect: () => undefined,
						toString: () => '',
					},
					{
						index: 3,
						name: 'Blueprint',
						edition: 'foil',
						plusChips: 0,
						plusMultiplier: 0,
						timesMultiplier: 1,
						rank: undefined,
						suit: undefined,
						active: false,
						count: 1,
						rarity: 'rare',
						effect: undefined,
						heldCardEffect: undefined,
						indirectEffect: undefined,
						playedCardEffect: undefined,
						toString: () => '',
					},
					{
						index: 4,
						name: 'The Idol',
						edition: 'polychrome',
						plusChips: 0,
						plusMultiplier: 0,
						timesMultiplier: 1,
						rank: 'King',
						suit: 'Hearts',
						active: false,
						count: 1,
						rarity: 'uncommon',
						effect: undefined,
						heldCardEffect: undefined,
						indirectEffect: undefined,
						playedCardEffect: () => undefined,
						toString: () => '',
					},
					{
						index: 5,
						name: 'Brainstorm',
						edition: 'foil',
						plusChips: 0,
						plusMultiplier: 0,
						timesMultiplier: 1,
						rank: undefined,
						suit: undefined,
						active: false,
						count: 1,
						rarity: 'rare',
						effect: undefined,
						heldCardEffect: undefined,
						indirectEffect: undefined,
						playedCardEffect: undefined,
						toString: () => '',
					},
					{
						index: 6,
						name: 'Brainstorm',
						edition: 'base',
						plusChips: 0,
						plusMultiplier: 0,
						timesMultiplier: 1,
						rank: undefined,
						suit: undefined,
						active: false,
						count: 1,
						rarity: 'rare',
						effect: undefined,
						heldCardEffect: undefined,
						indirectEffect: undefined,
						playedCardEffect: undefined,
						toString: () => '',
					},
					{
						index: 7,
						name: 'Brainstorm',
						edition: 'foil',
						plusChips: 0,
						plusMultiplier: 0,
						timesMultiplier: 1,
						rank: undefined,
						suit: undefined,
						active: false,
						count: 1,
						rarity: 'rare',
						effect: undefined,
						heldCardEffect: undefined,
						indirectEffect: undefined,
						playedCardEffect: undefined,
						toString: () => '',
					},
					{
						index: 8,
						name: 'Hanging Chad',
						edition: 'negative',
						plusChips: 0,
						plusMultiplier: 0,
						timesMultiplier: 1,
						rank: undefined,
						suit: undefined,
						active: false,
						count: 1,
						rarity: 'common',
						effect: undefined,
						heldCardEffect: undefined,
						indirectEffect: undefined,
						playedCardEffect: undefined,
						toString: () => '',
					},
					{
						index: 9,
						name: 'Chicot',
						edition: 'base',
						plusChips: 0,
						plusMultiplier: 0,
						timesMultiplier: 1,
						rank: undefined,
						suit: undefined,
						active: false,
						count: 1,
						rarity: 'legendary',
						effect: undefined,
						heldCardEffect: undefined,
						indirectEffect: undefined,
						playedCardEffect: undefined,
						toString: () => '',
					},
				],
				jokerSet: new Set([
					'Sock and Buskin',
					'Mail-in Rebate',
					'The Idol',
					'Blueprint',
					'Brainstorm',
					'Hanging Chad',
					'Chicot',
				]),
				jokerSlots: 5,
				cards: [
					{
						index: 0,
						rank: '2',
						suit: 'Diamonds',
						edition: 'base',
						enhancement: 'none',
						seal: 'none',
						debuffed: false,
						played: false,
						count: 1,
						toString: () => '',
					},
					{
						index: 1,
						rank: 'King',
						suit: 'Hearts',
						edition: 'polychrome',
						enhancement: 'glass',
						seal: 'red',
						debuffed: false,
						played: true,
						count: 1,
						toString: () => '',
					},
					{
						index: 2,
						rank: 'King',
						suit: 'Hearts',
						edition: 'polychrome',
						enhancement: 'glass',
						seal: 'red',
						debuffed: false,
						played: true,
						count: 1,
						toString: () => '',
					},
					{
						index: 3,
						rank: 'King',
						suit: 'Hearts',
						edition: 'polychrome',
						enhancement: 'glass',
						seal: 'red',
						debuffed: false,
						played: true,
						count: 1,
						toString: () => '',
					},
					{
						index: 4,
						rank: 'King',
						suit: 'Hearts',
						edition: 'polychrome',
						enhancement: 'glass',
						seal: 'red',
						debuffed: false,
						played: true,
						count: 1,
						toString: () => '',
					},
					{
						index: 5,
						rank: 'King',
						suit: 'Hearts',
						edition: 'polychrome',
						enhancement: 'glass',
						seal: 'red',
						debuffed: false,
						played: true,
						count: 1,
						toString: () => '',
					},
				],
			},
		},
	])('works', ({ initialState, expected }) => {
		const state = getState(initialState)

		expect(JSON.stringify(state)).toStrictEqual(JSON.stringify(expected))
	})
})
